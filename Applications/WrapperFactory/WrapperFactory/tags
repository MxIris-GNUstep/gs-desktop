!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/parallels/src/gs-desktop/Applications/WrapperFactory/WrapperFactory/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
AppFileWrapper	WrapperDocument.m	/^@implementation AppFileWrapper$/;"	I
AppFileWrapper	WrapperDocument.m	/^@interface AppFileWrapper : NSFileWrapper$/;"	i
ApplicationDelegate	ApplicationDelegate.h	/^@interface ApplicationDelegate : NSObject$/;"	i
ApplicationDelegate	ApplicationDelegate.m	/^@implementation ApplicationDelegate$/;"	I
ApplicationRole	WrapperDocument.h	/^} ApplicationRole;$/;"	t
EditorRole	WrapperDocument.h	/^    EditorRole$/;"	e
FailAction	WrapperDocument.h	/^    FailAction,$/;"	e
Icon	Icon.h	/^@interface Icon : NSObject$/;"	i
Icon	Icon.m	/^@implementation Icon$/;"	I
IconHeight	IconView.h	/^#define IconHeight 48.0f$/;"	M
IconView	IconView.h	/^@interface IconView : NSView$/;"	i
IconView	IconView.m	/^@implementation IconView (Private)$/;"	I	category:Private
IconView	IconView.m	/^@implementation IconView$/;"	I
IconView	IconView.m	/^@interface IconView (Private)$/;"	i	category:Private
IconView2	IconView.m	/^@implementation IconView2$/;"	I
IconView2	IconView.m	/^@interface IconView2 : IconView$/;"	i
IconWidth	IconView.h	/^#define IconWidth 48.0f$/;"	M
IgnoreAction	WrapperDocument.h	/^    IgnoreAction$/;"	e
NoneRole	WrapperDocument.h	/^    NoneRole,$/;"	e
Notifications	WrapperDocumentController.m	/^@implementation WrapperDocumentController (Notifications)$/;"	C	implementation:WrapperDocumentController
Notifications	WrapperDocumentController.m	/^@interface WrapperDocumentController (Notifications)$/;"	C	interface:WrapperDocumentController
OpenScript	WrapperDocumentController.h	/^#define OpenScript 2$/;"	M
PopUpIconView	IconView.m	/^@implementation PopUpIconView$/;"	I
PopUpIconView	IconView.m	/^@interface PopUpIconView : IconView$/;"	i
Private	IconView.m	/^@implementation IconView (Private)$/;"	C	implementation:IconView
Private	IconView.m	/^@interface IconView (Private)$/;"	C	interface:IconView
Private	Type.m	/^@implementation Type (Private)$/;"	C	implementation:Type
Private	Type.m	/^@interface Type (Private)$/;"	C	interface:Type
Private	TypesController.m	/^@implementation TypesController (Private)$/;"	C	implementation:TypesController
Private	TypesController.m	/^@interface TypesController (Private)$/;"	C	interface:TypesController
Private	WrapperDocument.m	/^@implementation WrapperDocument (Private)$/;"	C	implementation:WrapperDocument
Private	WrapperDocument.m	/^@interface WrapperDocument (Private)$/;"	C	interface:WrapperDocument
RunScriptAction	WrapperDocument.h	/^    RunScriptAction,$/;"	e
ScriptAction	WrapperDocument.h	/^} ScriptAction;$/;"	t
ServicesProvider	ServicesProvider.h	/^@interface ServicesProvider : NSObject$/;"	i
ServicesProvider	ServicesProvider.m	/^@implementation ServicesProvider$/;"	I
StartOpenScript	WrapperDocumentController.h	/^#define StartOpenScript 1$/;"	M
StartScript	WrapperDocumentController.h	/^#define StartScript 0$/;"	M
Type	Type.h	/^@interface Type : NSObject$/;"	i
Type	Type.m	/^@implementation Type (Private)$/;"	I	category:Private
Type	Type.m	/^@implementation Type$/;"	I
Type	Type.m	/^@interface Type (Private)$/;"	i	category:Private
TypeController	TypeController.h	/^@interface TypeController : NSObject$/;"	i
TypeController	TypeController.m	/^@implementation TypeController$/;"	I
TypesController	TypesController.h	/^@interface TypesController : NSObject$/;"	i
TypesController	TypesController.m	/^@implementation TypesController (Private)$/;"	I	category:Private
TypesController	TypesController.m	/^@implementation TypesController$/;"	I
TypesController	TypesController.m	/^@interface TypesController (Private)$/;"	i	category:Private
ViewerRole	WrapperDocument.h	/^    ViewerRole,$/;"	e
WrapperDocument	WrapperDocument.h	/^@interface WrapperDocument : NSDocument$/;"	i
WrapperDocument	WrapperDocument.m	/^@implementation WrapperDocument (Private)$/;"	I	category:Private
WrapperDocument	WrapperDocument.m	/^@implementation WrapperDocument$/;"	I
WrapperDocument	WrapperDocument.m	/^@interface WrapperDocument (Private)$/;"	i	category:Private
WrapperDocumentController	WrapperDocumentController.h	/^@interface WrapperDocumentController : NSObject$/;"	i
WrapperDocumentController	WrapperDocumentController.m	/^@implementation WrapperDocumentController (Notifications)$/;"	I	category:Notifications
WrapperDocumentController	WrapperDocumentController.m	/^@implementation WrapperDocumentController$/;"	I
WrapperDocumentController	WrapperDocumentController.m	/^@interface WrapperDocumentController (Notifications)$/;"	i	category:Notifications
_GSWrapper_GSWrapper_H	ApplicationDelegate.h	/^#define _GSWrapper_GSWrapper_H$/;"	M
_GSWrapper_IconView_H	IconView.h	/^#define _GSWrapper_IconView_H$/;"	M
_GSWrapper_Icon_H	Icon.h	/^#define _GSWrapper_Icon_H$/;"	M
_GSWrapper_ServiceProvider_H	ServicesProvider.h	/^#define _GSWrapper_ServiceProvider_H$/;"	M
_GSWrapper_TypeController_H	TypeController.h	/^#define _GSWrapper_TypeController_H$/;"	M
_GSWrapper_Type_H	Type.h	/^#define _GSWrapper_Type_H$/;"	M
_GSWrapper_TypesController_H	TypesController.h	/^#define _GSWrapper_TypesController_H$/;"	M
_GSWrapper_WrapperDocumentController_H	WrapperDocumentController.h	/^#define _GSWrapper_WrapperDocumentController_H$/;"	M
_GSWrapper_WrapperDocument_H	WrapperDocument.h	/^#define _GSWrapper_WrapperDocument_H$/;"	M
acceptsFirstMouse:	IconView.m	/^- (BOOL)acceptsFirstMouse: (NSEvent *)evt;$/;"	m	implementation:PopUpIconView
addType:	WrapperDocument.h	/^- (void)addType: (Type *)type;$/;"	m	interface:WrapperDocument
addType:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
aggregateChanged:	WrapperDocument.m	/^- (void)aggregateChanged: (NSNotification *)not;$/;"	m	interface:WrapperDocument	category:Private
aggregateChanged:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument	category:Private
appIcon	WrapperDocument.h	/^    Icon *appIcon;$/;"	E	interface:WrapperDocument
appIcon	WrapperDocument.h	/^- (Icon *)appIcon;$/;"	m	interface:WrapperDocument
appIcon	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
appIcon	WrapperDocumentController.h	/^    IBOutlet IconView *appIcon;$/;"	E	interface:WrapperDocumentController
appIcon	WrapperDocumentController.h	/^- (IconView *)appIcon;$/;"	m	interface:WrapperDocumentController
appIcon	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
application:openFile:	ApplicationDelegate.h	/^           openFile: (NSString *)file;$/;"	m	interface:ApplicationDelegate
application:openFile:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
application:openFiles:	ApplicationDelegate.h	/^          openFiles: (NSArray *)files;$/;"	m	interface:ApplicationDelegate
application:openFiles:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
applicationDidFinishLaunching:	ApplicationDelegate.h	/^- (void)applicationDidFinishLaunching: (NSNotification *)not;$/;"	m	interface:ApplicationDelegate
applicationDidFinishLaunching:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
applicationOpenUntitledFile:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
applicationShouldOpenUntitledFile:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
applicationShouldTerminate:	ApplicationDelegate.h	/^- (NSApplicationTerminateReply)applicationShouldTerminate: (NSNotification *)not;$/;"	m	interface:ApplicationDelegate
applicationShouldTerminate:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
applicationWillFinishLaunching:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
applicationWillTerminate:	ApplicationDelegate.h	/^- (void)applicationWillTerminate: (NSNotification *)not;$/;"	m	interface:ApplicationDelegate
applicationWillTerminate:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
armed	IconView.h	/^    BOOL armed;$/;"	E	interface:IconView
armed	IconView.m	/^- (BOOL)armed;$/;"	m	interface:IconView	category:Private
armed	IconView.m	/^{$/;"	m	implementation:IconView	category:Private
armedForDrag	IconView.m	/^    BOOL armedForDrag;$/;"	E	interface:PopUpIconView
arrayFromCommaSeparatedString:	WrapperDocument.m	/^- (NSArray *)arrayFromCommaSeparatedString: (NSString *)string;$/;"	m	interface:WrapperDocument	category:Private
arrayFromCommaSeparatedString:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument	category:Private
attachTo:	IconView.m	/^- (void)attachTo: (IconView *)iconView;$/;"	m	interface:PopUpIconView
attachTo:	IconView.m	/^{$/;"	m	implementation:PopUpIconView
attributeChangedName:value:	WrapperDocument.m	/^                       value: (id)v;$/;"	m	implementation:WrapperDocument	category:Private
attributeChangedName:value:	WrapperDocument.m	/^                       value: (id)v;$/;"	m	interface:WrapperDocument	category:Private
authors	WrapperDocument.h	/^    NSString *authors;$/;"	E	interface:WrapperDocument
authors	WrapperDocument.h	/^- (NSString *)authors;$/;"	m	interface:WrapperDocument
authors	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
authors	WrapperDocumentController.h	/^    IBOutlet NSTextField *authors;$/;"	E	interface:WrapperDocumentController
authors	WrapperDocumentController.h	/^- (NSTextField *)authors;$/;"	m	interface:WrapperDocumentController
authors	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
awakeFromNib	ApplicationDelegate.h	/^- (void)awakeFromNib;$/;"	m	interface:ApplicationDelegate
awakeFromNib	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
awakeFromNib	IconView.m	/^{$/;"	m	implementation:IconView
awakeFromNib	TypesController.h	/^- (void)awakeFromNib;$/;"	m	interface:TypesController
awakeFromNib	TypesController.m	/^{$/;"	m	implementation:TypesController
awakeFromNib	WrapperDocumentController.h	/^- (void)awakeFromNib;$/;"	m	interface:WrapperDocumentController
awakeFromNib	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
concludeDragOperation:	IconView.h	/^- (void)concludeDragOperation: (id<NSDraggingInfo>)info;$/;"	m	interface:IconView
concludeDragOperation:	IconView.m	/^{$/;"	m	implementation:IconView
concludeDragOperation:	IconView.m	/^{$/;"	m	implementation:PopUpIconView
controlTextDidChange:	TypeController.h	/^- (void)controlTextDidChange: (NSNotification *)not;$/;"	m	interface:TypeController
controlTextDidChange:	TypeController.m	/^{$/;"	m	implementation:TypeController
controlTextDidChange:	WrapperDocumentController.h	/^- (void)controlTextDidChange: (id)sender;$/;"	m	interface:WrapperDocumentController
controlTextDidChange:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
createWrapperForExecutable:userData:error:	ServicesProvider.h	/^                              error: (NSString **)error;$/;"	m	interface:ServicesProvider
createWrapperForExecutable:userData:error:	ServicesProvider.m	/^{$/;"	m	implementation:ServicesProvider
current	IconView.m	/^    IconView *current;$/;"	E	interface:PopUpIconView
current	IconView.m	/^- (IconView *)current;$/;"	m	interface:PopUpIconView
current	IconView.m	/^{$/;"	m	implementation:PopUpIconView
currentScript	WrapperDocumentController.h	/^    IBOutlet NSTextView *currentScript;$/;"	E	interface:WrapperDocumentController
currentScript	WrapperDocumentController.h	/^- (NSTextView *)currentScript;$/;"	m	interface:WrapperDocumentController
currentScript	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
currentScriptActionPopUp	WrapperDocumentController.h	/^    IBOutlet NSPopUpButton *currentScriptActionPopUp;$/;"	E	interface:WrapperDocumentController
currentScriptActionPopUp	WrapperDocumentController.h	/^- (NSPopUpButton *)currentScriptActionPopUp;$/;"	m	interface:WrapperDocumentController
currentScriptActionPopUp	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
currentScriptId	WrapperDocumentController.h	/^    int currentScriptId;$/;"	E	interface:WrapperDocumentController
currentScriptId	WrapperDocumentController.h	/^- (int)currentScriptId;$/;"	m	interface:WrapperDocumentController
currentScriptId	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
currentScriptShell	WrapperDocumentController.h	/^    IBOutlet NSTextField *currentScriptShell;$/;"	E	interface:WrapperDocumentController
currentScriptShell	WrapperDocumentController.h	/^- (NSTextField *)currentScriptShell;$/;"	m	interface:WrapperDocumentController
currentScriptShell	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
dealloc	Icon.m	/^{$/;"	m	implementation:Icon
dealloc	IconView.m	/^- (void)dealloc;$/;"	m	interface:PopUpIconView
dealloc	IconView.m	/^{$/;"	m	implementation:IconView
dealloc	IconView.m	/^{$/;"	m	implementation:PopUpIconView
dealloc	ServicesProvider.m	/^{$/;"	m	implementation:ServicesProvider
dealloc	TypesController.m	/^{$/;"	m	implementation:TypesController
dealloc	WrapperDocument.m	/^{$/;"	m	implementation:AppFileWrapper
dealloc	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
defaultCursor	WrapperDocumentController.h	/^    NSCursor *defaultCursor;$/;"	E	interface:WrapperDocumentController
delegate	IconView.h	/^    id delegate;$/;"	E	interface:IconView
deleteType:	TypesController.h	/^- (IBAction)deleteType: (id)sender;$/;"	m	interface:TypesController
deleteType:	TypesController.m	/^{$/;"	m	implementation:TypesController
description	WrapperDocument.h	/^    NSString *description;$/;"	E	interface:WrapperDocument
description	WrapperDocument.h	/^- (NSString *)description;$/;"	m	interface:WrapperDocument
description	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
description	WrapperDocumentController.h	/^    IBOutlet NSTextField *description;$/;"	E	interface:WrapperDocumentController
description	WrapperDocumentController.h	/^- (NSTextField *)description;$/;"	m	interface:WrapperDocumentController
description	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
dndOperation	IconView.h	/^    BOOL dndOperation;$/;"	E	interface:IconView
document	TypesController.h	/^    IBOutlet WrapperDocument *document;$/;"	E	interface:TypesController
document	TypesController.h	/^- (WrapperDocument *)document;$/;"	m	interface:TypesController
document	TypesController.m	/^{$/;"	m	implementation:TypesController
document	WrapperDocumentController.h	/^    IBOutlet WrapperDocument *document;$/;"	E	interface:WrapperDocumentController
documentAggregateDidChange:	TypesController.m	/^{$/;"	m	implementation:TypesController
documentChanged	WrapperDocument.m	/^- (void)documentChanged;$/;"	m	interface:WrapperDocument	category:Private
documentChanged	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument	category:Private
draggedImage:endetAt:operation:	IconView.m	/^{$/;"	m	implementation:IconView
draggingEntered:	IconView.h	/^- (NSDragOperation)draggingEntered: (id<NSDraggingInfo>)info;$/;"	m	interface:IconView
draggingEntered:	IconView.m	/^{$/;"	m	implementation:IconView
draggingExited:	IconView.h	/^- (void)draggingExited: (id<NSDraggingInfo>)info;$/;"	m	interface:IconView
draggingExited:	IconView.m	/^{$/;"	m	implementation:IconView
draggingImage	IconView.h	/^    NSImage *draggingImage;$/;"	E	interface:IconView
draggingSourceOperationMaskForLocal:	IconView.m	/^{$/;"	m	implementation:IconView
drawRect:	IconView.h	/^- (void)drawRect: (NSRect)rect;$/;"	m	interface:IconView
drawRect:	IconView.m	/^{$/;"	m	implementation:IconView
editWrapper:userData:error:	ServicesProvider.h	/^               error: (NSString **)error;$/;"	m	interface:ServicesProvider
editWrapper:userData:error:	ServicesProvider.m	/^{$/;"	m	implementation:ServicesProvider
emptyBox	TypesController.h	/^    NSBox *emptyBox;$/;"	E	interface:TypesController
executable	WrapperDocument.m	/^    NSData *executable;$/;"	E	interface:AppFileWrapper
executable	WrapperDocument.m	/^ - (NSData *)executable;$/;"	m	interface:AppFileWrapper
executable	WrapperDocument.m	/^{$/;"	m	implementation:AppFileWrapper
extensions	Type.h	/^    NSString *extensions;$/;"	E	interface:Type
extensions	Type.h	/^- (NSString *)extensions;$/;"	m	interface:Type
extensions	Type.m	/^{$/;"	m	implementation:Type
extensionsTextField	TypeController.h	/^    IBOutlet NSTextField *extensionsTextField;$/;"	E	interface:TypeController
extensionsTextField	TypeController.h	/^- (NSTextField *)extensionsTextField;$/;"	m	interface:TypeController
extensionsTextField	TypeController.m	/^{$/;"	m	implementation:TypeController
fileWrapper	WrapperDocument.h	/^    NSFileWrapper *fileWrapper;$/;"	E	interface:WrapperDocument
fileWrapperRepresentationOfType:	WrapperDocument.h	/^- (NSFileWrapper *)fileWrapperRepresentationOfType: (NSString *)type;$/;"	m	interface:WrapperDocument
fileWrapperRepresentationOfType:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
fullVersion	WrapperDocument.h	/^    NSString *fullVersion;$/;"	E	interface:WrapperDocument
fullVersion	WrapperDocument.h	/^- (NSString *)fullVersion;$/;"	m	interface:WrapperDocument
fullVersion	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
fullVersion	WrapperDocumentController.h	/^    IBOutlet NSTextField *fullVersion;$/;"	E	interface:WrapperDocumentController
fullVersion	WrapperDocumentController.h	/^- (NSTextField *)fullVersion;$/;"	m	interface:WrapperDocumentController
fullVersion	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
hidePopUp	IconView.m	/^- (void)hidePopUp;$/;"	m	interface:PopUpIconView
hidePopUp	IconView.m	/^{$/;"	m	implementation:PopUpIconView
hideTypeEditor	TypesController.m	/^- (void)hideTypeEditor;$/;"	m	interface:TypesController	category:Private
hideTypeEditor	TypesController.m	/^{$/;"	m	implementation:TypesController	category:Private
icon	IconView.h	/^    Icon *icon;$/;"	E	interface:IconView
icon	IconView.h	/^- (Icon *)icon;$/;"	m	interface:IconView
icon	IconView.m	/^{$/;"	m	implementation:IconView
icon	Type.h	/^    Icon *icon;$/;"	E	interface:Type
icon	Type.h	/^- (Icon *)icon;$/;"	m	interface:Type
icon	Type.m	/^{$/;"	m	implementation:Type
iconView	TypeController.h	/^    IBOutlet IconView *iconView;$/;"	E	interface:TypeController
iconView	TypeController.h	/^- (IconView *)iconView;$/;"	m	interface:TypeController
iconView	TypeController.m	/^{$/;"	m	implementation:TypeController
iconViewDidChangeIcon:	IconView.m	/^{$/;"	m	implementation:PopUpIconView
iconViewDidChangeIcon:	TypeController.m	/^{$/;"	m	implementation:TypeController
iconViewDidChangeIcon:	WrapperDocumentController.h	/^- (void)iconViewDidChangeIcon: (NSNotification *)not;$/;"	m	interface:WrapperDocumentController
iconViewDidChangeIcon:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
iconWithImage:	Icon.h	/^+ (id)iconWithImage: (NSImage *)i;$/;"	c	interface:Icon
iconWithImage:	Icon.m	/^{$/;"	c	implementation:Icon
ignoreModifierKeysWhileDragging	IconView.m	/^{$/;"	m	implementation:IconView
image	Icon.h	/^    NSImage *image;$/;"	E	interface:Icon
imageCopy:	Icon.h	/^- (NSImage *)imageCopy: (BOOL)copy;$/;"	m	interface:Icon
imageCopy:	Icon.m	/^{$/;"	m	implementation:Icon
imageForOriginalSizeCopy:	Icon.h	/^- (NSImage *)imageForOriginalSizeCopy: (BOOL)copy;$/;"	m	interface:Icon
imageForOriginalSizeCopy:	Icon.m	/^{$/;"	m	implementation:Icon
imageForSize:copy:	Icon.h	/^                     copy: (BOOL)copy;$/;"	m	interface:Icon
imageForSize:copy:	Icon.m	/^{$/;"	m	implementation:Icon
indexOfType:	WrapperDocument.h	/^- (unsigned)indexOfType: (Type *)type;$/;"	m	interface:WrapperDocument
indexOfType:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
init	Icon.h	/^- (id)init;$/;"	m	interface:Icon
init	Icon.m	/^{$/;"	m	implementation:Icon
init	IconView.h	/^- (id)init;$/;"	m	interface:IconView
init	IconView.m	/^- (id)init;$/;"	m	interface:PopUpIconView
init	IconView.m	/^{$/;"	m	implementation:IconView
init	IconView.m	/^{$/;"	m	implementation:PopUpIconView
init	Type.m	/^{$/;"	m	implementation:Type
init	TypesController.m	/^{$/;"	m	implementation:TypesController
init	WrapperDocument.h	/^- (id)init;$/;"	m	interface:WrapperDocument
init	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
init	WrapperDocumentController.h	/^- (id)init;$/;"	m	interface:WrapperDocumentController
init	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
initWithImage:	Icon.h	/^- (id)initWithImage: (NSImage *)i;$/;"	m	interface:Icon
initWithImage:	Icon.m	/^{$/;"	m	implementation:Icon
initialize	IconView.m	/^{$/;"	c	implementation:IconView
insetsSize	IconView.h	/^    float insetsSize;$/;"	E	interface:IconView
insetsSize	IconView.h	/^- (float)insetsSize;$/;"	m	interface:IconView
insetsSize	IconView.m	/^{$/;"	m	implementation:IconView
isSettingIcon	TypeController.h	/^    BOOL isSettingIcon;$/;"	E	interface:TypeController
loadFileWrapperRepresentation:ofType:	WrapperDocument.h	/^                               ofType: (NSString *)type;$/;"	m	interface:WrapperDocument
loadFileWrapperRepresentation:ofType:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
loadFreedesktopApplication:	WrapperDocument.m	/^- (BOOL)loadFreedesktopApplication: (NSFileWrapper *)file;$/;"	m	interface:WrapperDocument	category:Private
loadFreedesktopApplication:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument	category:Private
loadWrapper:	WrapperDocument.m	/^- (BOOL)loadWrapper: (NSFileWrapper *)file;$/;"	m	interface:WrapperDocument	category:Private
loadWrapper:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument	category:Private
main	main.m	/^int main(int argc, const char **argv) {$/;"	f
mouseDown:	IconView.m	/^{$/;"	m	implementation:IconView
mouseDown:	IconView.m	/^{$/;"	m	implementation:PopUpIconView
mouseDragged:	IconView.m	/^{$/;"	m	implementation:IconView
mouseDragged:	IconView.m	/^{$/;"	m	implementation:PopUpIconView
mouseUp:	IconView.m	/^{$/;"	m	implementation:IconView
mouseUp:	IconView.m	/^{$/;"	m	implementation:PopUpIconView
name	Type.h	/^    NSString *name;$/;"	E	interface:Type
name	Type.h	/^- (NSString *)name;$/;"	m	interface:Type
name	Type.m	/^{$/;"	m	implementation:Type
name	WrapperDocument.h	/^    NSString *name;$/;"	E	interface:WrapperDocument
name	WrapperDocument.h	/^- (NSString *)name;$/;"	m	interface:WrapperDocument
name	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
name	WrapperDocumentController.h	/^    IBOutlet NSTextField *name;$/;"	E	interface:WrapperDocumentController
name	WrapperDocumentController.h	/^- (NSTextField *)name;$/;"	m	interface:WrapperDocumentController
name	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
nameTextField	TypeController.h	/^    IBOutlet NSTextField *nameTextField;$/;"	E	interface:TypeController
nameTextField	TypeController.h	/^- (NSTextField *)nameTextField;$/;"	m	interface:TypeController
nameTextField	TypeController.m	/^{$/;"	m	implementation:TypeController
newType:	TypesController.h	/^- (IBAction)newType: (id)sender;$/;"	m	interface:TypesController
newType:	TypesController.m	/^{$/;"	m	implementation:TypesController
notifyDealloc:	IconView.m	/^- (void)notifyDealloc: (IconView *)iconView;$/;"	m	interface:PopUpIconView
notifyDealloc:	IconView.m	/^{$/;"	m	implementation:PopUpIconView
numberOfRowsInTableView:	TypesController.h	/^- (int)numberOfRowsInTableView: (NSTableView *)table;$/;"	m	interface:TypesController
numberOfRowsInTableView:	TypesController.m	/^- (int)numberOfRowsInTableView: (NSTableView *)table;$/;"	m	implementation:TypesController
openScript	WrapperDocument.h	/^    NSString *openScript;$/;"	E	interface:WrapperDocument
openScript	WrapperDocument.h	/^- (NSString *)openScript;$/;"	m	interface:WrapperDocument
openScript	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
openScriptAction	WrapperDocument.h	/^    ScriptAction openScriptAction;$/;"	E	interface:WrapperDocument
openScriptAction	WrapperDocument.h	/^- (ScriptAction)openScriptAction;$/;"	m	interface:WrapperDocument
openScriptAction	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
openScriptShell	WrapperDocument.h	/^    NSString *openScriptShell;$/;"	E	interface:WrapperDocument
openScriptShell	WrapperDocument.h	/^- (NSString *)openScriptShell;$/;"	m	interface:WrapperDocument
openScriptShell	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
originalSize	Icon.h	/^    NSSize originalSize;$/;"	E	interface:Icon
performDragOperation:	IconView.h	/^- (BOOL)performDragOperation: (id<NSDraggingInfo>)info;$/;"	m	interface:IconView
performDragOperation:	IconView.m	/^{$/;"	m	implementation:IconView
prepareForDragOperation:	IconView.h	/^- (BOOL)prepareForDragOperation: (id<NSDraggingInfo>)info;$/;"	m	interface:IconView
prepareForDragOperation:	IconView.m	/^{$/;"	m	implementation:IconView
registeredForDraggedTypes	IconView.h	/^    BOOL registeredForDraggedTypes;$/;"	E	interface:IconView
removeType:	WrapperDocument.h	/^- (void)removeType: (Type *)type;$/;"	m	interface:WrapperDocument
removeType:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
role	WrapperDocument.h	/^    ApplicationRole role;$/;"	E	interface:WrapperDocument
role	WrapperDocument.h	/^- (ApplicationRole)role;$/;"	m	interface:WrapperDocument
role	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
rolePopUp	TypeController.h	/^    IBOutlet NSPopUpButton *rolePopUp;$/;"	E	interface:TypeController
rolePopUp	WrapperDocumentController.h	/^    IBOutlet NSPopUpButton *rolePopUp;$/;"	E	interface:WrapperDocumentController
rolePopUp	WrapperDocumentController.h	/^- (NSPopUpButton *)rolePopUp;$/;"	m	interface:WrapperDocumentController
rolePopUp	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
runModalSavePanel:withAccessoryView:	WrapperDocument.h	/^       withAccessoryView: (NSView *)accessoryView;$/;"	m	interface:WrapperDocument
runModalSavePanel:withAccessoryView:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
saveFreedesktopApplication	WrapperDocument.m	/^- (NSFileWrapper *)saveFreedesktopApplication;$/;"	m	interface:WrapperDocument	category:Private
saveFreedesktopApplication	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument	category:Private
saveWrapper	WrapperDocument.m	/^- (NSFileWrapper *)saveWrapper;$/;"	m	interface:WrapperDocument	category:Private
saveWrapper	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument	category:Private
scaledTIFFRepresentation:	Icon.h	/^- (NSData *)scaledTIFFRepresentation: (NSSize)size;$/;"	m	interface:Icon
scaledTIFFRepresentation:	Icon.m	/^{$/;"	m	implementation:Icon
script	WrapperDocument.m	/^    NSData *script;$/;"	E	interface:AppFileWrapper
scriptActionToString:	WrapperDocument.m	/^+ (NSString *)scriptActionToString: (ScriptAction)action;$/;"	c	interface:WrapperDocument	category:Private
scriptActionToString:	WrapperDocument.m	/^{$/;"	c	implementation:WrapperDocument	category:Private
servicesMenuItem	ApplicationDelegate.h	/^    IBOutlet NSMenuItem *servicesMenuItem;$/;"	E	interface:ApplicationDelegate
servicesProvider	ApplicationDelegate.h	/^    ServicesProvider *servicesProvider;$/;"	E	interface:ApplicationDelegate
setAppIcon:	WrapperDocument.h	/^- (void)setAppIcon: (Icon *)i;$/;"	m	interface:WrapperDocument
setAppIcon:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setAppIcon:	WrapperDocumentController.h	/^- (void)setAppIcon: (IconView *)i;$/;"	m	interface:WrapperDocumentController
setAppIcon:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setArmed:	IconView.m	/^- (void)setArmed: (BOOL)a;$/;"	m	interface:IconView	category:Private
setArmed:	IconView.m	/^{$/;"	m	implementation:IconView	category:Private
setAuthors:	WrapperDocument.h	/^- (void)setAuthors: (NSString *)n;$/;"	m	interface:WrapperDocument
setAuthors:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setAuthors:	WrapperDocumentController.h	/^- (void)setAuthors: (NSTextField *)a;$/;"	m	interface:WrapperDocumentController
setAuthors:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setCurrentScript:	WrapperDocumentController.h	/^- (void)setCurrentScript: (NSTextView *)s;$/;"	m	interface:WrapperDocumentController
setCurrentScript:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setCurrentScriptAction:	WrapperDocumentController.h	/^- (IBAction)setCurrentScriptAction: (id)sender;$/;"	m	interface:WrapperDocumentController
setCurrentScriptAction:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setCurrentScriptActionPopUp:	WrapperDocumentController.h	/^- (void)setCurrentScriptActionPopUp: (NSPopUpButton *)actionPopUp;$/;"	m	interface:WrapperDocumentController
setCurrentScriptActionPopUp:	WrapperDocumentController.m	/^- (void)setCurrentScriptActionPopUp: (NSPopUpButton *)actionPopUp;$/;"	m	implementation:WrapperDocumentController
setCurrentScriptId:	WrapperDocumentController.h	/^- (void)setCurrentScriptId: (int)i;$/;"	m	interface:WrapperDocumentController
setCurrentScriptId:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setCurrentScriptShell:	WrapperDocumentController.h	/^- (void)setCurrentScriptShell: (NSTextField *)s;$/;"	m	interface:WrapperDocumentController
setCurrentScriptShell:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setCurrentScriptToOpen:	WrapperDocumentController.h	/^- (IBAction)setCurrentScriptToOpen: (id)sender;$/;"	m	interface:WrapperDocumentController
setCurrentScriptToOpen:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setCurrentScriptToStart:	WrapperDocumentController.h	/^- (IBAction)setCurrentScriptToStart: (id)sender;$/;"	m	interface:WrapperDocumentController
setCurrentScriptToStart:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setCurrentScriptToStartOpen:	WrapperDocumentController.h	/^- (IBAction)setCurrentScriptToStartOpen: (id)sender;$/;"	m	interface:WrapperDocumentController
setCurrentScriptToStartOpen:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setDescription:	WrapperDocument.h	/^- (void)setDescription: (NSString *)n;$/;"	m	interface:WrapperDocument
setDescription:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setDescription:	WrapperDocumentController.h	/^- (void)setDescription: (NSTextField *)d;$/;"	m	interface:WrapperDocumentController
setDescription:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setDocument:	TypesController.h	/^- (void)setDocument: (WrapperDocument *)doc;$/;"	m	interface:TypesController
setDocument:	TypesController.m	/^{$/;"	m	implementation:TypesController
setDocument:	WrapperDocumentController.h	/^- (void)setDocument: (WrapperDocument *)d;$/;"	m	interface:WrapperDocumentController
setDocument:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setExecutable:	WrapperDocument.m	/^- (void)setExecutable: (NSData *)exe;$/;"	m	interface:AppFileWrapper
setExecutable:	WrapperDocument.m	/^{$/;"	m	implementation:AppFileWrapper
setExtensions:	Type.h	/^- (void)setExtensions: (NSString *)e;$/;"	m	interface:Type
setExtensions:	Type.m	/^{$/;"	m	implementation:Type
setExtensionsTextField:	TypeController.h	/^- (void)setExtensionsTextField: (NSTextField *)extensions;$/;"	m	interface:TypeController
setExtensionsTextField:	TypeController.m	/^{$/;"	m	implementation:TypeController
setFullVersion:	WrapperDocument.h	/^- (void)setFullVersion: (NSString *)n;$/;"	m	interface:WrapperDocument
setFullVersion:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setFullVersion:	WrapperDocumentController.h	/^- (void)setFullVersion: (NSTextField *)v;$/;"	m	interface:WrapperDocumentController
setFullVersion:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setIcon:	IconView.h	/^- (void)setIcon: (Icon *)i;$/;"	m	interface:IconView
setIcon:	IconView.m	/^{$/;"	m	implementation:IconView
setIcon:	Type.h	/^- (void)setIcon: (Icon *)i;$/;"	m	interface:Type
setIcon:	Type.m	/^{$/;"	m	implementation:Type
setIconView:	TypeController.h	/^- (void)setIconView: (IconView *)icon;$/;"	m	interface:TypeController
setIconView:	TypeController.m	/^{$/;"	m	implementation:TypeController
setInsetsSize:	IconView.h	/^- (void)setInsetsSize: (float)size;$/;"	m	interface:IconView
setInsetsSize:	IconView.m	/^{$/;"	m	implementation:IconView
setName:	Type.h	/^- (void)setName: (NSString *)n;$/;"	m	interface:Type
setName:	Type.m	/^{$/;"	m	implementation:Type
setName:	WrapperDocument.h	/^- (void)setName: (NSString *)n;$/;"	m	interface:WrapperDocument
setName:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setName:	WrapperDocumentController.h	/^- (void)setName: (NSTextField *)n;$/;"	m	interface:WrapperDocumentController
setName:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setNameTextField:	TypeController.h	/^- (void)setNameTextField: (NSTextField *)name;$/;"	m	interface:TypeController
setNameTextField:	TypeController.m	/^{$/;"	m	implementation:TypeController
setOpenScript:	WrapperDocument.h	/^- (void)setOpenScript: (NSString *)n;$/;"	m	interface:WrapperDocument
setOpenScript:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setOpenScriptAction:	WrapperDocument.h	/^- (void)setOpenScriptAction: (ScriptAction)action;$/;"	m	interface:WrapperDocument
setOpenScriptAction:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setOpenScriptShell:	WrapperDocument.h	/^- (void)setOpenScriptShell: (NSString *)n;$/;"	m	interface:WrapperDocument
setOpenScriptShell:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setRole:	WrapperDocument.h	/^- (void)setRole: (ApplicationRole)r;$/;"	m	interface:WrapperDocument
setRole:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setRole:	WrapperDocumentController.h	/^- (IBAction)setRole: (id)sender;$/;"	m	interface:WrapperDocumentController
setRole:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setRolePopUp:	WrapperDocumentController.h	/^- (void)setRolePopUp: (NSPopUpButton *)role;$/;"	m	interface:WrapperDocumentController
setRolePopUp:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setServicesMenuItem:	ApplicationDelegate.h	/^- (void)setServicesMenuItem: (NSMenuItem *)menuItem;$/;"	m	interface:ApplicationDelegate
setServicesMenuItem:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
setStartOpenScript:	WrapperDocument.h	/^- (void)setStartOpenScript: (NSString *)n;$/;"	m	interface:WrapperDocument
setStartOpenScript:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setStartOpenScriptAction:	WrapperDocument.h	/^- (void)setStartOpenScriptAction: (ScriptAction)action;$/;"	m	interface:WrapperDocument
setStartOpenScriptAction:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setStartOpenScriptShell:	WrapperDocument.h	/^- (void)setStartOpenScriptShell: (NSString *)n;$/;"	m	interface:WrapperDocument
setStartOpenScriptShell:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setStartScript:	WrapperDocument.h	/^- (void)setStartScript: (NSString *)n;$/;"	m	interface:WrapperDocument
setStartScript:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setStartScriptAction:	WrapperDocument.h	/^- (void)setStartScriptAction: (ScriptAction)action;$/;"	m	interface:WrapperDocument
setStartScriptAction:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setStartScriptShell:	WrapperDocument.h	/^- (void)setStartScriptShell: (NSString *)n;$/;"	m	interface:WrapperDocument
setStartScriptShell:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setTableView:	TypesController.h	/^- (void)setTableView: (NSTableView *)table;$/;"	m	interface:TypesController
setTableView:	TypesController.m	/^{$/;"	m	implementation:TypesController
setType:	TypeController.h	/^- (void)setType: (Type *)t;$/;"	m	interface:TypeController
setType:	TypeController.m	/^{$/;"	m	implementation:TypeController
setTypeController:	TypesController.h	/^- (void)setTypeController: (TypeController *)typec;$/;"	m	interface:TypesController
setTypeController:	TypesController.m	/^{$/;"	m	implementation:TypesController
setTypeEditor:	TypesController.h	/^- (void)setTypeEditor: (NSBox *)Editor;$/;"	m	interface:TypesController
setTypeEditor:	TypesController.m	/^{$/;"	m	implementation:TypesController
setUrl:	WrapperDocument.h	/^- (void)setUrl: (NSString *)n;$/;"	m	interface:WrapperDocument
setUrl:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setUrl:	WrapperDocumentController.h	/^- (void)setUrl: (NSTextField *)u;$/;"	m	interface:WrapperDocumentController
setUrl:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setVersion:	WrapperDocument.h	/^- (void)setVersion: (NSString *)n;$/;"	m	interface:WrapperDocument
setVersion:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
setVersion:	WrapperDocumentController.h	/^- (void)setVersion: (NSTextField *)v;$/;"	m	interface:WrapperDocumentController
setVersion:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setWindowController:	WrapperDocumentController.h	/^- (void)setWindowController: (NSWindowController *)controller;$/;"	m	interface:WrapperDocumentController
setWindowController:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
setWindowsMenuItem:	ApplicationDelegate.h	/^- (void)setWindowsMenuItem: (NSMenuItem *)menuItem;$/;"	m	interface:ApplicationDelegate
setWindowsMenuItem:	ApplicationDelegate.m	/^{$/;"	m	implementation:ApplicationDelegate
settingValue	WrapperDocumentController.h	/^    BOOL settingValue;$/;"	E	interface:WrapperDocumentController
setupTable	TypesController.h	/^- (void)setupTable;$/;"	m	interface:TypesController
setupTable	TypesController.m	/^{$/;"	m	implementation:TypesController
showTypeEditor	TypesController.m	/^- (void)showTypeEditor;$/;"	m	interface:TypesController	category:Private
showTypeEditor	TypesController.m	/^{$/;"	m	implementation:TypesController	category:Private
startOpenScript	WrapperDocument.h	/^    NSString *startOpenScript;$/;"	E	interface:WrapperDocument
startOpenScript	WrapperDocument.h	/^- (NSString *)startOpenScript;$/;"	m	interface:WrapperDocument
startOpenScript	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
startOpenScriptAction	WrapperDocument.h	/^    ScriptAction startOpenScriptAction;$/;"	E	interface:WrapperDocument
startOpenScriptAction	WrapperDocument.h	/^- (ScriptAction)startOpenScriptAction;$/;"	m	interface:WrapperDocument
startOpenScriptAction	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
startOpenScriptShell	WrapperDocument.h	/^    NSString *startOpenScriptShell;$/;"	E	interface:WrapperDocument
startOpenScriptShell	WrapperDocument.h	/^- (NSString *)startOpenScriptShell;$/;"	m	interface:WrapperDocument
startOpenScriptShell	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
startScript	WrapperDocument.h	/^    NSString *startScript;$/;"	E	interface:WrapperDocument
startScript	WrapperDocument.h	/^- (NSString *)startScript;$/;"	m	interface:WrapperDocument
startScript	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
startScriptAction	WrapperDocument.h	/^    ScriptAction startScriptAction;$/;"	E	interface:WrapperDocument
startScriptAction	WrapperDocument.h	/^- (ScriptAction)startScriptAction;$/;"	m	interface:WrapperDocument
startScriptAction	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
startScriptShell	WrapperDocument.h	/^    NSString *startScriptShell;$/;"	E	interface:WrapperDocument
startScriptShell	WrapperDocument.h	/^- (NSString *)startScriptShell;$/;"	m	interface:WrapperDocument
startScriptShell	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
stringToScriptAction:	WrapperDocument.m	/^+ (ScriptAction)stringToScriptAction: (NSString *)str;$/;"	c	interface:WrapperDocument	category:Private
stringToScriptAction:	WrapperDocument.m	/^{$/;"	c	implementation:WrapperDocument	category:Private
tableView	TypesController.h	/^    IBOutlet NSTableView *tableView;$/;"	E	interface:TypesController
tableView	TypesController.h	/^- (NSTableView *)tableView;$/;"	m	interface:TypesController
tableView	TypesController.m	/^{$/;"	m	implementation:TypesController
tableView:objectValueForTableColumn:row:	TypesController.h	/^            row: (int)row;$/;"	m	interface:TypesController
tableView:objectValueForTableColumn:row:	TypesController.m	/^{$/;"	m	implementation:TypesController
tableView:sortDescriptorsDidChange:	TypesController.h	/^sortDescriptorsDidChange: (NSArray *)sortDescriptors;$/;"	m	interface:TypesController
tableView:sortDescriptorsDidChange:	TypesController.m	/^{$/;"	m	implementation:TypesController
tableViewSelectionDidChange:	TypesController.h	/^- (void)tableViewSelectionDidChange: (NSNotification *)not;$/;"	m	interface:TypesController
tableViewSelectionDidChange:	TypesController.m	/^{$/;"	m	implementation:TypesController
textCursor	WrapperDocumentController.h	/^    NSCursor *textCursor;$/;"	E	interface:WrapperDocumentController
textDidChange:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
type	TypeController.h	/^    Type *type;$/;"	E	interface:TypeController
type	TypeController.h	/^- (Type *)type;$/;"	m	interface:TypeController
type	TypeController.m	/^{$/;"	m	implementation:TypeController
typeAtIndex:	WrapperDocument.h	/^- (Type *)typeAtIndex: (unsigned)index;$/;"	m	interface:WrapperDocument
typeAtIndex:	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
typeChangedAttribute:value:	Type.m	/^                       value: (id)value;$/;"	m	interface:Type	category:Private
typeChangedAttribute:value:	Type.m	/^{$/;"	m	implementation:Type	category:Private
typeController	TypesController.h	/^    IBOutlet TypeController *typeController;$/;"	E	interface:TypesController
typeController	TypesController.h	/^- (TypeController *)typeController;$/;"	m	interface:TypesController
typeController	TypesController.m	/^{$/;"	m	implementation:TypesController
typeCount	WrapperDocument.h	/^- (int)typeCount;$/;"	m	interface:WrapperDocument
typeCount	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
typeEditor	TypesController.h	/^    IBOutlet NSBox *typeEditor;$/;"	E	interface:TypesController
typeEditor	TypesController.h	/^- (NSBox *)typeEditor;$/;"	m	interface:TypesController
typeEditor	TypesController.m	/^{$/;"	m	implementation:TypesController
typeEditorBorderType	TypesController.h	/^    NSBorderType typeEditorBorderType;$/;"	E	interface:TypesController
typeEditorContents	TypesController.h	/^    NSView *typeEditorContents;$/;"	E	interface:TypesController
typeEditorTitlePosition	TypesController.h	/^    NSTitlePosition typeEditorTitlePosition;$/;"	E	interface:TypesController
types	WrapperDocument.h	/^    NSMutableArray *types;$/;"	E	interface:WrapperDocument
url	WrapperDocument.h	/^    NSString *url;$/;"	E	interface:WrapperDocument
url	WrapperDocument.h	/^- (NSString *)url;$/;"	m	interface:WrapperDocument
url	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
url	WrapperDocumentController.h	/^    IBOutlet NSTextField *url;$/;"	E	interface:WrapperDocumentController
url	WrapperDocumentController.h	/^- (NSTextField *)url;$/;"	m	interface:WrapperDocumentController
url	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
version	WrapperDocument.h	/^    NSString *version;$/;"	E	interface:WrapperDocument
version	WrapperDocument.h	/^- (NSString *)version;$/;"	m	interface:WrapperDocument
version	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
version	WrapperDocumentController.h	/^    IBOutlet NSTextField *version;$/;"	E	interface:WrapperDocumentController
version	WrapperDocumentController.h	/^- (NSTextField *)version;$/;"	m	interface:WrapperDocumentController
version	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController
viewDidMoveToSuperview	IconView.h	/^- (void)viewDidMoveToSuperview;$/;"	m	interface:IconView
viewDidMoveToSuperview	IconView.m	/^{$/;"	m	implementation:IconView
win	IconView.m	/^    NSWindow *win;$/;"	E	interface:PopUpIconView
windowController	WrapperDocumentController.h	/^    IBOutlet NSWindowController *windowController;$/;"	E	interface:WrapperDocumentController
windowNibName	WrapperDocument.h	/^- (NSString *)windowNibName;$/;"	m	interface:WrapperDocument
windowNibName	WrapperDocument.m	/^{$/;"	m	implementation:WrapperDocument
windowsMenuItem	ApplicationDelegate.h	/^    IBOutlet NSMenuItem *windowsMenuItem;$/;"	E	interface:ApplicationDelegate
wrapperDocumentChangedNotification:	WrapperDocumentController.m	/^- (void)wrapperDocumentChangedNotification: (NSNotification *)not;$/;"	m	interface:WrapperDocumentController	category:Notifications
wrapperDocumentChangedNotification:	WrapperDocumentController.m	/^{$/;"	m	implementation:WrapperDocumentController	category:Notifications
writeToFile:atomically:updateFilenames:	WrapperDocument.m	/^    updateFilenames:(BOOL)updateNamesFlag;$/;"	m	interface:AppFileWrapper
writeToFile:atomically:updateFilenames:	WrapperDocument.m	/^{$/;"	m	implementation:AppFileWrapper
